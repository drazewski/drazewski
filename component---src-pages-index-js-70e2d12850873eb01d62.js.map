{"version":3,"file":"component---src-pages-index-js-70e2d12850873eb01d62.js","mappings":"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","sources":["webpack://ldrazewski-blog/./src/components/HeroImage.js","webpack://ldrazewski-blog/./src/components/SidebarTitle.js","webpack://ldrazewski-blog/./src/components/FeaturedPost.js","webpack://ldrazewski-blog/./src/components/RightColumn.js","webpack://ldrazewski-blog/./src/layout/Layout.js","webpack://ldrazewski-blog/./src/pages/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\nimport HeroImageTitle from \"./HeroImageTitle\";\n\nconst ExportedImage = styled(GatsbyImage)`\n  margin: auto;\n  position: unset !important;\n`;\n\nconst HeroImageWrapper = styled.section`\n  margin: 0 0 20px 0;\n  overflow: hidden;\n  padding: 0;\n  position: relative;\n  min-height: 50vh;\n`;\n\nconst HeroImage = () => {\n  const [heroHeight, setHeroHeight] = useState(\"calc(100vh)\");\n\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"sea.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 1600\n            layout: FULL_WIDTH\n            placeholder: BLURRED\n            formats: [AUTO, WEBP, AVIF]\n          )\n        }\n      }\n    }\n  `);\n\n  useEffect(() => {\n    const isNextTimeVisited = localStorage.getItem(\"nextTimeVisited\");\n\n    if (isNextTimeVisited) {\n      setHeroHeight(\"69vh\");\n    } else {\n     localStorage.setItem(\"nextTimeVisited\", 1);\n    }\n  },[]);\n\n  const image = getImage(data.placeholderImage);\n\n  return (\n    <HeroImageWrapper style={{maxHeight: heroHeight}}>\n      <ExportedImage\n        image={image}\n        alt=\"Łukasz Drążewski Personal Blog\"\n      />\n      <HeroImageTitle />\n    </HeroImageWrapper>\n  );\n};\n\nexport default HeroImage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst BorderedWrapper = styled.div`\n  padding-top: 30px;\n  border-top: 1px solid #ddd;\n`;\n\nconst Title = styled.h2`\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  text-align: center;\n  margin-top: -40px;\n  margin-bottom: 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst TitleText = styled.span`\n  display: inline-block;\n  padding: 0 20px;\n  background-color: #fff;\n`;\n\nconst SidebarTitle = ({ title }) => (\n  <BorderedWrapper>\n    <Title>\n      <TitleText>{title}</TitleText>\n    </Title>\n  </BorderedWrapper>\n);\n\nexport default SidebarTitle;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { colors } from \"../shared/constants\";\nimport { sizes } from \"../shared/breakpoints\";\n\nconst PostItem = styled.div`\n  display: flex;\n  margin-bottom: 15px;\n`;\n\nconst PostItemTitle = styled.h4`\n  color: ${colors.headingsPrimary};\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.5;\n  margin: 0;\n  margin-bottom: 6px;\n\n  @media(min-width: ${sizes.sm}) {\n    font-size: 14px;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n\n  @media(min-width: ${sizes.md}) {\n    -webkit-line-clamp: 3;\n  }\n`;\n\nconst PostItemSubtitle = styled.span`\n  color: ${colors.textLight};\n  text-transform: uppercase;\n  font-size: 13px;\n  font-family: 'Open sans';\n  font-style: italic;\n\n  @media(min-width: ${sizes.sm}) {\n    font-size: 11px;\n  }\n`;\n\nconst Thumbnail = styled.img`\n  flex: 2;\n  margin: 10px 0px;\n  width: 60px;\n  min-height: 60px;\n  max-width: 140px;\n`;\n\nconst Meta = styled.div`\n  flex: 3;\n  margin: 5px 0 10px 10px;\n`;\n\nconst FeaturedPost = ({ title, imageUrl, link, subtitle }) => {\n  return (\n    <PostItem>\n      <Thumbnail\n        alt={title}\n        src={imageUrl}\n      />\n      <Meta>\n        <PostItemTitle>\n          <a href={link}>{title}</a>\n        </PostItemTitle>\n        <PostItemSubtitle>{subtitle}</PostItemSubtitle>\n      </Meta>\n    </PostItem>\n  );\n};\n\nFeaturedPost.propTypes = {\n  title: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n};\n\nexport default FeaturedPost;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport SidebarTitle from \"./SidebarTitle\";\nimport FeaturedPost from \"./FeaturedPost\";\n\nconst Aside = styled.aside`\n  min-height: calc(100vh - 210px);\n  max-width: 1030px;\n  margin: 0 auto;\n  padding: 30px 0;\n  width: calc(100% - 60px);\n`;\n\nconst IMG = styled.img`\n  margin: 0px auto 10px;\n  display: flex;\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  object-fit: cover;\n  object-position: right;\n`;\n\nconst Text = styled.p`\n  font-size: 14px;\n  margin: 0 0 20px 0;\n  text-align: justify;\n`;\n\nconst WidgetArea = styled.div`\n  padding-bottom: 30px;\n`;\n\nconst RightColumn = () => {\n  const query = useStaticQuery(graphql`\n    {\n      allContentfulBlogPosts(filter: {featured: {eq: true}}) {\n        edges {\n          node {\n            date(formatString: \"MMM DD, YYYY\", locale: \"en\")\n            slug\n            title\n            content {\n              raw\n            }\n            featuredImage {\n              fixed(width: 300) {\n                src\n              }\n            }\n          }\n        }\n      }\n\n      allContentfulExternalLinks(sort: {order: DESC, fields: date}, limit: 100) {\n        edges {\n          node {\n            author\n            title\n            url\n            featuredImage {\n              fixed(width: 300) {\n                src\n              }\n            }\n          }\n        }\n      }\n\n      contentfulElements(title: {eq: \"about-me\"}) {\n        content {\n          content\n        }\n      }\n\n      allContentfulAsset(filter: {title: {eq: \"personal-photo\"}}) {\n        nodes {\n          fluid {\n            srcSet\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <Aside>\n      <WidgetArea>\n        <SidebarTitle title=\"Here I Am\" />\n        <IMG srcSet={query.allContentfulAsset.nodes[0].fluid.srcSet} />\n        <Text>\n          {query.contentfulElements.content.content}\n        </Text>\n      </WidgetArea>\n      <WidgetArea>\n        <SidebarTitle title=\"Random posts\" />\n        {query.allContentfulBlogPosts.edges.map((post) => (\n          <FeaturedPost\n            key={post.node.slug}\n            title={post.node.title}\n            imageUrl={post.node.featuredImage.fixed.src}\n            link={`/blog/${post.node.slug}`}\n            subtitle={post.node.date}\n          />\n        ))}\n      </WidgetArea>\n      <WidgetArea>\n        <SidebarTitle title=\"Recommended\" />\n        <Text>\n          A list of articles that I find particularly interesting or practical.\n        </Text>\n        {query.allContentfulExternalLinks.edges.map((post) => (\n          <FeaturedPost\n            key={post.node.title}\n            title={post.node.title}\n            imageUrl={post.node.featuredImage.fixed.src}\n            link={post.node.url}\n            subtitle={post.node.author}\n          />\n        ))}\n      </WidgetArea>\n    </Aside>\n  );\n};\n\nexport default RightColumn;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"../components/Header\";\nimport HeroImage from \"../components/HeroImage\";\nimport Footer from \"../components/Footer\";\nimport Main from \"../components/Main\";\nimport RightColumn from \"../components/RightColumn\";\nimport \"./layout.css\";\nimport styled from \"styled-components\";\nimport { sizes } from \"../shared/breakpoints\";\nimport SEO from \"../components/Seo\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  margin: auto;\n  max-width: 1030px;\n\n  @media(min-width: ${sizes.sm}) {\n    grid-template-columns: 70% 1fr;\n  }\n`;\n\nconst Layout = ({ children }) => (\n  <>\n    <SEO />\n    <Header />\n    <div className=\"parallax\">\n      <HeroImage />\n    </div>\n    <Grid>\n      <Main>\n        {children}\n      </Main>\n      <RightColumn />\n    </Grid>\n    <Footer />\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nimport Image from \"gatsby-image\";\nimport styled from \"styled-components\";\nimport { colors } from \"../shared/constants\";\nimport Layout from \"../layout/Layout\";\nimport PostDate from \"../components/PostDate\";\nimport Parallax from \"../shared/parallax\";\nimport { sizes } from \"../shared/breakpoints\";\n\nconst PostHeader = styled.div`\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nconst PostTitle = styled.h2`\n  font-size: 30px;\n  margin: 0;\n  color: #000;\n  line-height: 1.25;\n`;\n\nconst Tag = styled.span`\n  color: #84b3f9;\n  font-size: 14px;\n  font-family: 'Open sans';\n  padding: 2px 16px 4px;\n  border-radius: 20px;\n  margin-right: 10px;\n  border: 1px solid #84b3f9ed;\n  transition: 0.4s all;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  transition: 0.3s;\n\n    &:hover {\n      opacity: 0.5;\n    }\n`;\n\nconst ArticleListItem = styled.li`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Article = styled.article`\n  font-size: 17px;\n  color: ${colors.textPrimary};\n  margin-bottom: 60px;\n  text-align: justify;\n  line-height: 1.75;\n  border: 1px solid #444;\n  padding: 10px 20px 10px;\n  border-radius: 8px;\n  box-shadow: 6px 6px 1px #ccc;\n\n  & .gatsby-resp-image-wrapper {\n    margin: 30px 0;\n  }\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n\n  @media(min-width: ${sizes.sm}) {\n    flex-direction: row;\n  }\n\n`;\n\nconst IMG = styled(Image)`\n  margin: -10px 0 10px;\n  max-width: 100%;\n  border-radius: 5px;\n  transition: 0.4s all;\n\n  @media(min-width: ${sizes.sm}) {\n    margin: 5px 0 10px 20px;\n    width: 200px;\n  }\n\n  &:hover {\n    opacity: 0.7\n  }\n`;\n\nconst Excerpt = styled.div`\n  padding-top: 4px;\n  & p {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 5;\n    -webkit-box-orient: vertical;\n  }\n`;\n\nconst ArticleFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst PaginationLink = styled(Link)`\n  padding: 0 8px;\n`;\n\nconst PaginationItem = styled.span`\n  color: ${colors.textLight};\n  padding: 0 8px;\n`;\n\nexport const posts = graphql`\n  query posts($limit: Int, $skip: Int) {\n    allContentfulBlogPosts(limit: $limit, sort: {order: DESC, fields: date}, skip: $skip) {\n      edges {\n        node {\n          date(formatString: \"MMM DD, YYYY\", locale: \"en\")\n          featuredImage { \n            fluid(maxWidth: 980) {\n              ...GatsbyContentfulFluid\n            }\n          }\n          slug\n          title\n          excerpt {\n            excerpt\n          }\n          content {\n            raw\n          }\n          tagi\n        }\n      }\n    }\n  }\n`;\n\nconst BlogPage = (props) => {\n  const [pageArray, setPageArray] = useState([]);\n  const { currentPage, numPages } = props.pageContext;\n\n  useEffect(() => {\n    const pages = [];\n\n    for (let i=1; i<=numPages; i++) {\n      pages.push(i);\n    }\n\n    setPageArray(pages);\n\n    const parallax = new Parallax();\n\n    parallax.setVars();\n  }, []);\n\n  return (\n    <Layout>\n      {props.data.allContentfulBlogPosts.edges.length && props.data.allContentfulBlogPosts.edges.map((post) => (\n        <ol key={post.node.slug}>\n          <ArticleListItem>\n            <Article>\n              <PostHeader>\n                <PostTitle isHome><StyledLink to={`/blog/${post.node.slug}`}>{post.node.title}</StyledLink></PostTitle>\n                <PostDate date={post.node.date} />\n              </PostHeader>\n              <Flex>\n                <Excerpt>\n                {post.node.excerpt?.excerpt\n                  ? <p>{post.node.excerpt.excerpt}</p>\n                  : <p>\n                    {\n                      post.node.content.raw.content.find((node) => node.nodeType === \"paragraph\").content[0].value\n                    }\n                  </p>\n                }\n                </Excerpt>\n                <Link to={`/blog/${post.node.slug}`}>\n                  <IMG \n                    fluid={post.node.featuredImage.fluid} \n                    key={post.node.featuredImage.fluid.src}\n                    alt={post.node.featuredImage.title}\n                  />\n                </Link>\n              </Flex>\n              <ArticleFooter>\n                <span>\n                  {post.node?.tagi?.length > 0 && post.node.tagi.map(tag => (\n                    <Tag key={tag}>{tag}</Tag>\n                  ))}\n                </span>\n                <span data-disqus-identifier={post.node.slug} />\n                <Link to={`/blog/${post.node.slug}#disqus_thread`}>\n                  {/* <span data-disqus-identifier={post.node.slug} /> */}\n                </Link>\n              </ArticleFooter>\n            </Article>\n          </ArticleListItem>\n        </ol>\n      ))}\n      {numPages > 1 &&\n        <Pagination>\n          {pageArray.map(element => (\n            element !== currentPage ? (\n            <PaginationLink to={element === 1 ? \"/\" : `/strona/${element}`} key={element}>{element}</PaginationLink>\n            ) : (\n            <PaginationItem key={element}>{element}</PaginationItem>\n            )\n          ))}\n        </Pagination>\n      }\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n"],"names":["ExportedImage","styled","GatsbyImage","HeroImageWrapper","useState","heroHeight","setHeroHeight","data","useStaticQuery","useEffect","localStorage","getItem","setItem","image","getImage","placeholderImage","style","maxHeight","alt","HeroImageTitle","BorderedWrapper","Title","TitleText","title","PostItem","PostItemTitle","colors","sizes","PostItemSubtitle","Thumbnail","Meta","imageUrl","link","subtitle","src","href","Aside","IMG","Text","WidgetArea","query","srcSet","allContentfulAsset","nodes","fluid","contentfulElements","content","allContentfulBlogPosts","edges","map","post","key","node","slug","featuredImage","fixed","date","allContentfulExternalLinks","url","author","Grid","children","Header","className","Main","Footer","PostHeader","PostTitle","Tag","StyledLink","Link","ArticleListItem","Article","Flex","Image","Excerpt","ArticleFooter","Pagination","PaginationLink","PaginationItem","props","pageArray","setPageArray","pageContext","currentPage","numPages","pages","i","push","Parallax","setVars","length","isHome","to","excerpt","raw","find","nodeType","value","tagi","tag","element"],"sourceRoot":""}