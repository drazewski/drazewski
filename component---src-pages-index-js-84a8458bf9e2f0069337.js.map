{"version":3,"file":"component---src-pages-index-js-84a8458bf9e2f0069337.js","mappings":"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","sources":["webpack://ldrazewski-blog/./src/components/sidebarTitle.js","webpack://ldrazewski-blog/./src/components/featuredPost.js","webpack://ldrazewski-blog/./src/components/rightColumn.js","webpack://ldrazewski-blog/./src/layout/layout.js","webpack://ldrazewski-blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { colors } from '../shared/constants';\n\nconst BorderedWrapper = styled.div`\n  padding-top: 30px;\n  border-top: 1px solid #ddd;\n`\n\nconst Title = styled.h2`\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  text-align: center;\n  margin-top: -40px;\n  margin-bottom: 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst TitleText = styled.span`\n  display: inline-block;\n  padding: 0 20px;\n  background-color: #fff;\n`;\n\nconst SidebarTitle = ({ title }) => (\n  <BorderedWrapper>\n    <Title>\n      <TitleText>{title}</TitleText>\n    </Title>\n  </BorderedWrapper>\n)\n\nexport default SidebarTitle\n","import React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\";\nimport styled from \"styled-components\"\nimport { useContentfulImage } from \"../hooks\";\nimport { colors } from '../shared/constants';\n\nconst PostItem = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`\n\nconst PostItemTitle = styled.h4`\n  color: ${colors.headingsPrimary};\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  margin: 0;\n  padding-bottom: 7px;\n`\n\nconst PostItemDate = styled.span`\n  color: ${colors.textLight};\n  text-transform: uppercase;\n  font-size: 11px;\n  font-family: 'Open sans';\n  font-style: italic;\n`\n\nconst Thumbnail = styled(Image)`\n  flex: 2;\n  margin: 10px 10px 10px 0;\n  width: 150px;\n  height: 100px;\n`\n\nconst Meta = styled.div`\n  flex: 3;\n  margin: 10px 0 10px 10px;\n`\n\nconst FeaturedPost = ({ post }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"grapes.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <PostItem>\n      <Thumbnail\n        alt={post.node.title}\n      />\n      <Meta>\n        <PostItemTitle>\n          <Link to={`/blog/${post.node.slug}`} >{post.node.title}</Link>\n        </PostItemTitle>\n        <PostItemDate>{post.node.date}</PostItemDate>\n      </Meta>\n    </PostItem>\n  );\n}\n\nexport default FeaturedPost","import React from \"react\"\nimport styled from \"styled-components\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport SidebarTitle from './sidebarTitle'\nimport FeaturedPost from './featuredPost'\n\nconst Aside = styled.aside`\n  min-height: calc(100vh - 210px);\n  max-width: 1030px;\n  margin: 0 auto;\n  padding: 30px 0;\n  width: calc(100% - 60px);\n`;\n\nconst IMG = styled.img`\n  max-width: 100%;\n`;\n\nconst Text = styled.p`\n  font-size: 14px;\n  margin: 20px 0;\n`;\n\nconst WidgetArea = styled.div`\n  padding-bottom: 30px;\n`\n\nconst RightColumn = () => {\n  const query = useStaticQuery(graphql`\n    {\n      file(relativePath: { eq: \"personal-photo.png\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n          fixed {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n\n      allContentfulBlogPosts(filter: {featured: {eq: true}}) {\n        edges {\n          node {\n            date(formatString: \"DD MMM YYYY\", locale: \"pl\")\n            slug\n            title\n            content {\n              raw\n            }\n          }\n        }\n      }\n\n      allContentfulAsset(filter: {title: {eq: \"personal-photo\"}}) {\n        nodes {\n          fluid {\n            srcSet\n          }\n        }\n      }\n    }\n  `);\n\n  return(\n    <Aside>\n      <WidgetArea>\n        <SidebarTitle title=\"Here I Am\" />\n        <IMG srcSet={query.allContentfulAsset.nodes[0].fluid.srcSet} />\n        <Text>\n          Hi!   \n        </Text>\n      </WidgetArea>\n      <WidgetArea>\n        <SidebarTitle title=\"CzÄ™sto czytane\" />\n        {query.allContentfulBlogPosts.edges.map((post) => <FeaturedPost key={post.node.slug} post={post} />)}\n      </WidgetArea>\n    </Aside>\n  )\n}\n\nexport default RightColumn\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Header from \"../components/header\"\nimport HeaderSection from \"../components/headerSection\"\nimport Footer from \"../components/footer\"\nimport Main from \"../components/main\"\nimport RightColumn from \"../components/rightColumn\"\nimport './layout.css';\nimport styled from \"styled-components\"\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 70% 1fr;\n  margin: auto;\n  max-width: 1030px;\n`\n\nconst Layout = ({ children }) => (\n  <>\n    <Header/>\n    <HeaderSection />\n    <Grid>\n      <Main>\n        {children}\n      </Main>\n      <RightColumn />\n    </Grid>\n    <Footer />\n  </>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React, { useEffect, useState } from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport Image from \"gatsby-image\";\nimport { BLOCKS } from \"@contentful/rich-text-types\";\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer'\nimport styled from \"styled-components\"\nimport { colors } from '../shared/constants';\nimport Layout from \"../layout/layout\"\nimport { useContentfulImage } from \"../hooks\";\nimport MainTitle from '../components/mainTitle';\nimport PostDate from '../components/postDate';\n\nconst PostHeader = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n`\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  transition: 0.3s;\n\n    &:hover {\n      opacity: 0.5;\n    }\n`;\n\nconst ReadMoreLink = styled(Link)`\n  display: block;\n  font-size: 13px;\n  text-transform: uppercase;\n  text-align: center;\n  text-decoration: underline;\n  color: inherit;\n  transition: 0.3s;\n\n    &:hover {\n      opacity: 0.5;\n    }\n`;\n\nconst Article = styled.article`\n  font-size: 17px;\n  color: ${colors.textPrimary};\n  margin-bottom: 60px;\n  text-align: justify;\n  line-height: 1.75;\n\n  & .gatsby-resp-image-wrapper {\n    margin: 30px 0;\n  }\n`\n\nconst IMG = styled(Image)`\n  margin: 30px 0;\n  max-width: 100%;\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst PaginationLink = styled(Link)`\n  padding: 0 8px;\n`;\n\nconst PaginationItem = styled.span`\n  color: ${colors.textLight};\n  padding: 0 8px;\n`;\n\nexport const posts = graphql`\n  query posts($limit: Int, $skip: Int) {\n    allContentfulBlogPosts(limit: $limit, sort: {order: DESC, fields: date}, skip: $skip) {\n      edges {\n        node {\n          date(formatString: \"dddd, DD MMMM YYYY\", locale: \"pl\")\n          slug\n          title\n          excerpt {\n            excerpt\n          }\n          content {\n            raw\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst options = {\n  renderNode: {\n    [BLOCKS.EMBEDDED_ASSET]: (node) => {\n      const alt = node.data.target.fields?.title['en-US'];\n      const fluid = useContentfulImage(node.data.target.sys.contentful_id);\n\n      return <IMG alt={alt} fluid={fluid} />\n    }\n  }\n}\n\nconst BlogPage = (props) => {\n  const [pageArray, setPageArray] = useState([]);\n  const { currentPage, numPages } = props.pageContext;\n\n  useEffect(() => {\n    const pages = [];\n\n    for (let i=1; i<=numPages; i++) {\n      pages.push(i);\n    }\n\n    setPageArray(pages)\n  }, []);\n\n  return (\n    <Layout>\n      {props.data.allContentfulBlogPosts.edges.length && props.data.allContentfulBlogPosts.edges.map((post) => (\n        <ol key={post.node.slug}>\n          <PostHeader>\n            <MainTitle><StyledLink to={`/blog/${post.node.slug}`}>{post.node.title}</StyledLink></MainTitle>\n            <PostDate date={post.node.date} />\n          </PostHeader>\n          <Article>\n            {post.node.excerpt?.excerpt\n              ? documentToReactComponents(JSON.parse(post.node.excerpt.excerpt), options)\n              : <p>{post.node.content.raw.content.find((node) => node.nodeType === \"paragraph\").content[0].value}</p>\n            }\n            <ReadMoreLink to={`/blog/${post.node.slug}`}>Przeczytaj caÅ‚oÅ›Ä‡...</ReadMoreLink>\n          </Article>\n        </ol>\n      ))}\n      {numPages > 1 &&\n        <Pagination>\n          {pageArray.map(element => (\n            element !== currentPage ? (\n            <PaginationLink to={element === 1 ? `/` : `/strona/${element}`} key={element}>{element}</PaginationLink>\n            ) : (\n            <PaginationItem key={element}>{element}</PaginationItem>\n            )\n          ))}\n        </Pagination>\n      }\n    </Layout>\n  );\n}\n\nexport default BlogPage\n"],"names":["BorderedWrapper","styled","Title","TitleText","title","PostItem","PostItemTitle","colors","PostItemDate","Thumbnail","Image","Meta","post","useStaticQuery","alt","node","Link","to","slug","date","Aside","IMG","Text","WidgetArea","query","srcSet","allContentfulAsset","nodes","fluid","allContentfulBlogPosts","edges","map","key","Grid","children","PostHeader","StyledLink","ReadMoreLink","Article","Pagination","PaginationLink","PaginationItem","options","renderNode","BLOCKS","data","target","fields","useContentfulImage","sys","contentful_id","props","useState","pageArray","setPageArray","pageContext","currentPage","numPages","useEffect","pages","i","push","length","excerpt","documentToReactComponents","JSON","parse","content","raw","find","nodeType","value","element"],"sourceRoot":""}