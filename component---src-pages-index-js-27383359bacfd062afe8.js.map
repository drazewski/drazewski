{"version":3,"file":"component---src-pages-index-js-27383359bacfd062afe8.js","mappings":"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","sources":["webpack://ldrazewski-blog/./src/pages/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nimport Image from \"gatsby-image\";\nimport styled from \"styled-components\";\nimport { colors } from \"../shared/constants\";\nimport Layout from \"../layout/Layout\";\nimport PostDate from \"../components/PostDate\";\nimport Parallax from \"../shared/parallax\";\nimport { sizes } from \"../shared/breakpoints\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\n\nconst PostHeader = styled.div`\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nconst PostTitle = styled.h2`\n  font-size: 30px;\n  margin: 0;\n  color: #000;\n  line-height: 1.25;\n`;\n\nconst Tag = styled.span`\n  color: ${colors.lightBlue};\n  font-size: 14px;\n  font-family: 'Open sans';\n  padding: 2px 16px 4px;\n  border-radius: 20px;\n  margin-right: 10px;\n  border: 1px solid #84b3f9ed;\n  transition: 0.4s all;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  transition: 0.3s;\n\n    &:hover {\n      opacity: 0.5;\n    }\n`;\n\nconst ArticleListItem = styled.li`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Article = styled.article`\n  font-size: 17px;\n  color: ${colors.textPrimary};\n  margin-bottom: 60px;\n  text-align: justify;\n  line-height: 1.75;\n  border: 1px solid #444;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 6px 6px 1px #ccc;\n\n  & .gatsby-resp-image-wrapper {\n    margin: 30px 0;\n  }\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n\n  @media(min-width: ${sizes.sm}) {\n    flex-direction: row;\n  }\n\n`;\n\nconst IMG = styled(Image)`\n  margin: -10px 0 10px;\n  max-width: 100%;\n  border-radius: 5px;\n  transition: 0.4s all;\n\n  @media(min-width: ${sizes.sm}) {\n    margin: 5px 0 10px 20px;\n    width: 200px;\n  }\n\n  &:hover {\n    opacity: 0.7\n  }\n`;\n\nconst Excerpt = styled.div`\n  padding-top: 4px;\n  & p {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 5;\n    -webkit-box-orient: vertical;\n  }\n`;\n\nconst ArticleFooter = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst PaginationLink = styled(Link)`\n  padding: 0 8px;\n`;\n\nconst PaginationItem = styled.span`\n  color: ${colors.textLight};\n  padding: 0 8px;\n`;\n\nconst PaginationText = styled(Link)`\n  font: 13px Lora;\n  padding: 0 5px;\n`;\n\nconst PaginationArrow = styled(FontAwesomeIcon)`\n  font-size: 12px;\n  padding-top: 2px;\n`;\n\nexport const posts = graphql`\n  query posts($limit: Int, $skip: Int) {\n    allContentfulBlogPosts(limit: $limit, sort: {order: DESC, fields: date}, skip: $skip) {\n      edges {\n        node {\n          date(formatString: \"MMM DD, YYYY\", locale: \"en\")\n          featuredImage { \n            fluid(maxWidth: 980) {\n              ...GatsbyContentfulFluid\n            }\n          }\n          slug\n          title\n          excerpt {\n            excerpt\n          }\n          content {\n            raw\n          }\n          tagi\n        }\n      }\n    }\n  }\n`;\n\nconst BlogPage = (props) => {\n  const [pageArray, setPageArray] = useState([]);\n  const { currentPage, numPages } = props.pageContext;\n\n  useEffect(() => {\n    const pages = [];\n    for (let i=1; i<=numPages; i++) {\n      pages.push(i);\n    }\n\n    setPageArray(pages);\n\n    const parallax = new Parallax();\n    parallax.setVars();\n  }, []);\n\n  return (\n    <Layout>\n      {props.data.allContentfulBlogPosts.edges.length && props.data.allContentfulBlogPosts.edges.map((post) => (\n        <ol key={post.node.slug}>\n          <ArticleListItem>\n            <Article>\n              <PostHeader>\n                <PostTitle isHome><StyledLink to={`/blog/${post.node.slug}`}>{post.node.title}</StyledLink></PostTitle>\n                <PostDate date={post.node.date} />\n              </PostHeader>\n              <Flex>\n                <Excerpt>\n                {post.node.excerpt?.excerpt\n                  ? <p>{post.node.excerpt.excerpt}</p>\n                  : <p>\n                    {\n                      post.node.content.raw.content.find((node) => node.nodeType === \"paragraph\").content[0].value\n                    }\n                  </p>\n                }\n                </Excerpt>\n                <Link to={`/blog/${post.node.slug}`}>\n                  <IMG \n                    fluid={post.node.featuredImage.fluid} \n                    key={post.node.featuredImage.fluid.src}\n                    alt={post.node.featuredImage.title}\n                  />\n                </Link>\n              </Flex>\n              <ArticleFooter>\n                <span>\n                  {post.node?.tagi?.length > 0 && post.node.tagi.map(tag => (\n                    <Tag key={tag}>{tag}</Tag>\n                  ))}\n                </span>\n                <span data-disqus-identifier={post.node.slug} />\n                <Link to={`/blog/${post.node.slug}#disqus_thread`}>\n                  {/* <span data-disqus-identifier={post.node.slug} /> */}\n                </Link>\n              </ArticleFooter>\n            </Article>\n          </ArticleListItem>\n        </ol>\n      ))}\n      {numPages > 1 &&\n        <Pagination>\n          {currentPage !== 1 && (\n            <>\n            <PaginationArrow icon={faChevronLeft} />\n            <PaginationText to={currentPage === 2 ? \"/\" : `/strona/${currentPage - 1}`}>previous</PaginationText>\n            </>\n          )}\n          {pageArray.map(element => (\n            element !== currentPage ? (\n            <PaginationLink to={element === 1 ? \"/\" : `/strona/${element}`} key={element}>{element}</PaginationLink>\n            ) : (\n            <PaginationItem key={element}>{element}</PaginationItem>\n            )\n          ))}\n          {currentPage !== pageArray.length && (\n            <>\n            <PaginationText to={`/strona/${currentPage + 1}`}>next</PaginationText>\n            <PaginationArrow icon={faChevronRight} />\n            </>\n          )}\n        </Pagination>\n      }\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n"],"names":["PostHeader","styled","PostTitle","Tag","colors","StyledLink","Link","ArticleListItem","Article","Flex","sizes","IMG","Image","Excerpt","ArticleFooter","Pagination","PaginationLink","PaginationItem","PaginationText","PaginationArrow","FontAwesomeIcon","props","useState","pageArray","setPageArray","pageContext","currentPage","numPages","useEffect","pages","i","push","Parallax","setVars","data","allContentfulBlogPosts","edges","length","map","post","key","node","slug","isHome","to","title","date","excerpt","content","raw","find","nodeType","value","fluid","featuredImage","src","alt","tagi","tag","icon","faChevronLeft","element","faChevronRight"],"sourceRoot":""}