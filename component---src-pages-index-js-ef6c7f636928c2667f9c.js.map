{"version":3,"file":"component---src-pages-index-js-ef6c7f636928c2667f9c.js","mappings":"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","sources":["webpack://ldrazewski-blog/./src/components/HeroImage.js","webpack://ldrazewski-blog/./src/components/PostDate.js","webpack://ldrazewski-blog/./src/components/SidebarTitle.js","webpack://ldrazewski-blog/./src/components/FeaturedPost.js","webpack://ldrazewski-blog/./src/components/RightColumn.js","webpack://ldrazewski-blog/./src/layout/Layout.js","webpack://ldrazewski-blog/./src/pages/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\nimport { sizes } from \"../shared/breakpoints\";\n\nconst ExportedImage = styled(GatsbyImage)`\n  margin: auto;\n  position: unset !important;\n`;\n\nconst HeroImageWrapper = styled.section`\n  margin: 0 0 20px 0;\n  overflow: hidden;\n  padding: 0;\n  position: relative;\n`;\n\nconst ImageShadow = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  box-shadow: 16px -20px 40px 0px #777 inset;\n  top: 0;\n  left: 0;  \n`;\n\nconst TitleWrapper = styled.div`\n  max-width: 1030px;\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  right: 50%;\n  transform: translateX(-50%);\n`;\n\nconst Title = styled.div`\n  position: absolute;\n  bottom: 0px;\n  color: white;\n  left: 15px;\n`;\n\nconst Name = styled.h1`\n  font-family: 'Charmonman', cursive;\n  font-size: 20px;\n  border-bottom: 1px solid;\n  margin-bottom: 15px;\n  padding-bottom: 12px;\n  font-weight: 300;\n\n  @media(min-width: ${sizes.sm}) {\n    font-size: 30px;\n  }\n`;\n\nconst Subname = styled.h5`\n  font-size: 12px;\n  font-weight: 500;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  margin: 10px 0;\n\n  @media(min-width: ${sizes.sm}) {\n    font-size: 16px;\n    margin: 20px 0;\n  }\n`;\n\nconst HeroImage = () => {\n  const [heroHeight, setHeroHeight] = useState(\"calc(100vh - 48px)\");\n\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"grapes.jpg\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 1600\n            layout: FULL_WIDTH\n            placeholder: BLURRED\n            formats: [AUTO, WEBP, AVIF]\n          )\n        }\n      }\n    }\n  `);\n\n  useEffect(() => {\n    const isNextTimeVisited = localStorage.getItem(\"nextTimeVisited\");\n\n    if (isNextTimeVisited) {\n      setHeroHeight(\"50vh\");\n    } else {\n     localStorage.setItem(\"nextTimeVisited\", 1);\n    }\n  },[]);\n\n  const image = getImage(data.placeholderImage);\n\n  return (\n    <HeroImageWrapper style={{maxHeight: heroHeight}}>\n      <ExportedImage\n        image={image}\n        imgStyle={{transform: \"scaleX(-1)\"}}\n        alt=\"Łukasz Drążewski Personal Blog\"\n      />\n      <ImageShadow />\n      <TitleWrapper>\n        <Title>\n          <Name>Łukasz Drążewski</Name>\n          <Subname>personal blog</Subname>\n        </Title> \n      </TitleWrapper>\n    </HeroImageWrapper>\n  );\n};\n\nexport default HeroImage;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../shared/constants\";\n\nconst Date = styled.span`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: ${colors.textLight};\n  font: 12px Lora;\n`;\n\nconst PostDate = ({ date }) => <Date>{date}</Date>;\n\nexport default PostDate;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst BorderedWrapper = styled.div`\n  padding-top: 30px;\n  border-top: 1px solid #ddd;\n`;\n\nconst Title = styled.h2`\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  text-align: center;\n  margin-top: -40px;\n  margin-bottom: 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst TitleText = styled.span`\n  display: inline-block;\n  padding: 0 20px;\n  background-color: #fff;\n`;\n\nconst SidebarTitle = ({ title }) => (\n  <BorderedWrapper>\n    <Title>\n      <TitleText>{title}</TitleText>\n    </Title>\n  </BorderedWrapper>\n);\n\nexport default SidebarTitle;\n","import React from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport { colors } from \"../shared/constants\";\n\nconst PostItem = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nconst PostItemTitle = styled.h4`\n  color: ${colors.headingsPrimary};\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  margin: 0;\n  padding-bottom: 7px;\n`;\n\nconst PostItemDate = styled.span`\n  color: ${colors.textLight};\n  text-transform: uppercase;\n  font-size: 11px;\n  font-family: 'Open sans';\n  font-style: italic;\n`;\n\nconst Thumbnail = styled.img`\n  flex: 2;\n  margin: 10px 10px 10px 0;\n  width: 80px;\n`;\n\nconst Meta = styled.div`\n  flex: 3;\n  margin: 5px 0 10px 10px;\n`;\n\nconst FeaturedPost = ({ post }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"boat.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <PostItem>\n      <Thumbnail\n        alt={post.node.title}\n        src={post.node.featuredImage.fixed.src}\n      />\n      <Meta>\n        <PostItemTitle>\n          <Link to={`/blog/${post.node.slug}`}>{post.node.title}</Link>\n        </PostItemTitle>\n        <PostItemDate>{post.node.date}</PostItemDate>\n      </Meta>\n    </PostItem>\n  );\n};\n\nexport default FeaturedPost;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport SidebarTitle from \"./SidebarTitle\";\nimport FeaturedPost from \"./FeaturedPost\";\n\nconst Aside = styled.aside`\n  min-height: calc(100vh - 210px);\n  max-width: 1030px;\n  margin: 0 auto;\n  padding: 30px 0;\n  width: calc(100% - 60px);\n`;\n\nconst IMG = styled.img`\n  max-width: 70%;\n  margin: auto;\n  display: flex;\n`;\n\nconst Text = styled.p`\n  font-size: 14px;\n  margin: 0 0 20px 0;\n`;\n\nconst WidgetArea = styled.div`\n  padding-bottom: 30px;\n`;\n\nconst RightColumn = () => {\n  const query = useStaticQuery(graphql`\n    {\n      allContentfulBlogPosts(filter: {featured: {eq: true}}) {\n        edges {\n          node {\n            date(formatString: \"MMM DD, YYYY\", locale: \"en\")\n            slug\n            title\n            content {\n              raw\n            }\n            featuredImage {\n              fixed(width: 300) {\n                src\n              }\n            }\n          }\n        }\n      }\n\n      allContentfulAsset(filter: {title: {eq: \"personal-photo\"}}) {\n        nodes {\n          fluid {\n            srcSet\n          }\n        }\n      }\n    }\n  `);\n\n  return(\n    <Aside>\n      <WidgetArea>\n        <SidebarTitle title=\"Here I Am\" />\n        <IMG srcSet={query.allContentfulAsset.nodes[0].fluid.srcSet} />\n        <Text>\n          Hi!   \n        </Text>\n      </WidgetArea>\n      <WidgetArea>\n        <SidebarTitle title=\"Random posts\" />\n        {query.allContentfulBlogPosts.edges.map((post) => <FeaturedPost key={post.node.slug} post={post} />)}\n      </WidgetArea>  \n      <WidgetArea>\n        <SidebarTitle title=\"Recommended\" />\n        <Text>\n        Here you will find interesting articles on various topics that I have read recently.\n        </Text>\n      </WidgetArea>\n    </Aside>\n  );\n};\n\nexport default RightColumn;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"../components/Header\";\nimport HeroImage from \"../components/HeroImage\";\nimport Footer from \"../components/Footer\";\nimport Main from \"../components/Main\";\nimport RightColumn from \"../components/RightColumn\";\nimport \"./layout.css\";\nimport styled from \"styled-components\";\nimport { sizes } from \"../shared/breakpoints\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  margin: auto;\n  max-width: 1030px;\n\n  @media(min-width: ${sizes.sm}) {\n    grid-template-columns: 70% 1fr;\n  }\n`;\n\nconst Layout = ({ children }) => (\n  <>\n    <Header />\n    <HeroImage />\n    <Grid>\n      <Main>\n        {children}\n      </Main>\n      <RightColumn />\n    </Grid>\n    <Footer />\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React, { useEffect, useState } from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport Image from \"gatsby-image\";\nimport styled from \"styled-components\"\nimport { colors } from \"../shared/constants\";\nimport Layout from \"../layout/Layout\"\nimport MainTitle from \"../components/MainTitle\";\nimport PostDate from \"../components/PostDate\";\n\nconst PostHeader = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n`\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  transition: 0.3s;\n\n    &:hover {\n      opacity: 0.5;\n    }\n`;\n\nconst ReadMoreLink = styled(Link)`\n  display: block;\n  font-size: 13px;\n  text-transform: uppercase;\n  text-align: center;\n  text-decoration: underline;\n  color: inherit;\n  transition: 0.3s;\n\n    &:hover {\n      opacity: 0.5;\n    }\n`;\n\nconst Article = styled.article`\n  font-size: 17px;\n  color: ${colors.textPrimary};\n  margin-bottom: 60px;\n  text-align: justify;\n  line-height: 1.75;\n\n  & .gatsby-resp-image-wrapper {\n    margin: 30px 0;\n  }\n`\n\nconst IMG = styled(Image)`\n  margin: 30px 0;\n  max-width: 100%;\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst PaginationLink = styled(Link)`\n  padding: 0 8px;\n`;\n\nconst PaginationItem = styled.span`\n  color: ${colors.textLight};\n  padding: 0 8px;\n`;\n\nexport const posts = graphql`\n  query posts($limit: Int, $skip: Int) {\n    allContentfulBlogPosts(limit: $limit, sort: {order: DESC, fields: date}, skip: $skip) {\n      edges {\n        node {\n          date(formatString: \"MMM DD, YYYY\", locale: \"en\")\n          featuredImage { \n            fluid(maxWidth: 980) {\n              ...GatsbyContentfulFluid\n            }\n          }\n          slug\n          title\n          excerpt {\n            excerpt\n          }\n          content {\n            raw\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst BlogPage = (props) => {\n  const [pageArray, setPageArray] = useState([]);\n  const { currentPage, numPages } = props.pageContext;\n\n  useEffect(() => {\n    const pages = [];\n\n    for (let i=1; i<=numPages; i++) {\n      pages.push(i);\n    }\n\n    setPageArray(pages)\n  }, []);\n\n  return (\n    <Layout>\n      {props.data.allContentfulBlogPosts.edges.length && props.data.allContentfulBlogPosts.edges.map((post) => (\n        <ol key={post.node.slug}>\n          <PostHeader>\n            <MainTitle><StyledLink to={`/blog/${post.node.slug}`}>{post.node.title}</StyledLink></MainTitle>\n            <PostDate date={post.node.date} />\n          </PostHeader>\n          <Article>\n            <Link to={`/blog/${post.node.slug}`}>\n              <IMG \n                fluid={props.data.allContentfulBlogPosts.edges[0].node.featuredImage.fluid} \n                key={props.data.allContentfulBlogPosts.edges[0].node.featuredImage.fluid.src}\n                alt={props.data.allContentfulBlogPosts.edges[0].node.featuredImage.title}\n              />\n            </Link>\n            {post.node.excerpt?.excerpt\n              ? post.node.excerpt.excerpt\n              : <p>{post.node.content.raw.content.find((node) => node.nodeType === \"paragraph\").content[0].value}</p>\n            }\n            <ReadMoreLink to={`/blog/${post.node.slug}`}>Read more...</ReadMoreLink>\n          </Article>\n        </ol>\n      ))}\n      {numPages > 1 &&\n        <Pagination>\n          {pageArray.map(element => (\n            element !== currentPage ? (\n            <PaginationLink to={element === 1 ? \"/\" : `/strona/${element}`} key={element}>{element}</PaginationLink>\n            ) : (\n            <PaginationItem key={element}>{element}</PaginationItem>\n            )\n          ))}\n        </Pagination>\n      }\n    </Layout>\n  );\n}\n\nexport default BlogPage\n"],"names":["ExportedImage","styled","GatsbyImage","HeroImageWrapper","ImageShadow","TitleWrapper","Title","Name","sizes","Subname","useState","heroHeight","setHeroHeight","data","useStaticQuery","useEffect","localStorage","getItem","setItem","image","getImage","placeholderImage","style","maxHeight","imgStyle","transform","alt","Date","colors","date","BorderedWrapper","TitleText","title","PostItem","PostItemTitle","PostItemDate","Thumbnail","Meta","post","node","src","featuredImage","fixed","Link","to","slug","Aside","IMG","Text","WidgetArea","query","srcSet","allContentfulAsset","nodes","fluid","allContentfulBlogPosts","edges","map","key","Grid","children","Header","HeroImage","Main","Footer","PostHeader","StyledLink","ReadMoreLink","Article","Image","Pagination","PaginationLink","PaginationItem","props","pageArray","setPageArray","pageContext","currentPage","numPages","pages","i","push","length","excerpt","content","raw","find","nodeType","value","element"],"sourceRoot":""}