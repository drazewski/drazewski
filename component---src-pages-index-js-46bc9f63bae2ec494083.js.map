{"version":3,"file":"component---src-pages-index-js-46bc9f63bae2ec494083.js","mappings":"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","sources":["webpack://ldrazewski-blog/./src/components/MainTitle.js","webpack://ldrazewski-blog/./src/components/PostDate.js","webpack://ldrazewski-blog/./src/components/SidebarTitle.js","webpack://ldrazewski-blog/./src/components/FeaturedPost.js","webpack://ldrazewski-blog/./src/components/RightColumn.js","webpack://ldrazewski-blog/./src/layout/Layout.js","webpack://ldrazewski-blog/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../shared/constants\";\n\nconst Title = styled.h2`\n  font-size: 30px;\n  font-weight: 300;\n  color: ${colors.headingsPrimary};\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  text-align: center;\n  margin: 4px 0 15px;\n`;\n\nconst MainTitle = ({ children }) => (\n  <Title>\n    {children}\n  </Title>\n);\n\nexport default MainTitle;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../shared/constants\";\n\nconst Date = styled.span`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: ${colors.textLight};\n  font: 12px Lora;\n`;\n\nconst PostDate = ({ date }) => <Date>{date}</Date>;\n\nexport default PostDate;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst BorderedWrapper = styled.div`\n  padding-top: 30px;\n  border-top: 1px solid #ddd;\n`;\n\nconst Title = styled.h2`\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  text-align: center;\n  margin-top: -40px;\n  margin-bottom: 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst TitleText = styled.span`\n  display: inline-block;\n  padding: 0 20px;\n  background-color: #fff;\n`;\n\nconst SidebarTitle = ({ title }) => (\n  <BorderedWrapper>\n    <Title>\n      <TitleText>{title}</TitleText>\n    </Title>\n  </BorderedWrapper>\n);\n\nexport default SidebarTitle;\n","import React from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\";\nimport styled from \"styled-components\"\nimport { useContentfulImage } from \"../hooks\";\nimport { colors } from '../shared/constants';\n\nconst PostItem = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`\n\nconst PostItemTitle = styled.h4`\n  color: ${colors.headingsPrimary};\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.5;\n  margin: 0;\n  padding-bottom: 7px;\n`\n\nconst PostItemDate = styled.span`\n  color: ${colors.textLight};\n  text-transform: uppercase;\n  font-size: 11px;\n  font-family: 'Open sans';\n  font-style: italic;\n`\n\nconst Thumbnail = styled(Image)`\n  flex: 2;\n  margin: 10px 10px 10px 0;\n  width: 150px;\n  height: 100px;\n`\n\nconst Meta = styled.div`\n  flex: 3;\n  margin: 10px 0 10px 10px;\n`\n\nconst FeaturedPost = ({ post }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"boat.jpg\" }) {\n        childImageSharp {\n          fluid(maxWidth: 300) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <PostItem>\n      <Thumbnail\n        alt={post.node.title}\n      />\n      <Meta>\n        <PostItemTitle>\n          <Link to={`/blog/${post.node.slug}`}>{post.node.title}</Link>\n        </PostItemTitle>\n        <PostItemDate>{post.node.date}</PostItemDate>\n      </Meta>\n    </PostItem>\n  );\n}\n\nexport default FeaturedPost","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport SidebarTitle from \"./SidebarTitle\";\nimport FeaturedPost from \"./FeaturedPost\";\n\nconst Aside = styled.aside`\n  min-height: calc(100vh - 210px);\n  max-width: 1030px;\n  margin: 0 auto;\n  padding: 30px 0;\n  width: calc(100% - 60px);\n`;\n\nconst IMG = styled.img`\n  max-width: 70%;\n  margin: auto;\n  display: flex;\n`;\n\nconst Text = styled.p`\n  font-size: 14px;\n  margin: 0 0 20px 0;\n`;\n\nconst WidgetArea = styled.div`\n  padding-bottom: 30px;\n`;\n\nconst RightColumn = () => {\n  const query = useStaticQuery(graphql`\n    {\n      allContentfulBlogPosts(filter: {featured: {eq: true}}) {\n        edges {\n          node {\n            date(formatString: \"MMM DD, YYYY\", locale: \"en\")\n            slug\n            title\n            content {\n              raw\n            }\n          }\n        }\n      }\n\n      allContentfulAsset(filter: {title: {eq: \"personal-photo\"}}) {\n        nodes {\n          fluid {\n            srcSet\n          }\n        }\n      }\n    }\n  `);\n\n  return(\n    <Aside>\n      <WidgetArea>\n        <SidebarTitle title=\"Here I Am\" />\n        <IMG srcSet={query.allContentfulAsset.nodes[0].fluid.srcSet} />\n        <Text>\n          Hi!   \n        </Text>\n      </WidgetArea>\n      <WidgetArea>\n        <SidebarTitle title=\"Random posts\" />\n        {query.allContentfulBlogPosts.edges.map((post) => <FeaturedPost key={post.node.slug} post={post} />)}\n      </WidgetArea>  \n      <WidgetArea>\n        <SidebarTitle title=\"Recommended\" />\n        <Text>\n        Here you will find interesting articles on various topics that I have read recently.\n        </Text>\n      </WidgetArea>\n    </Aside>\n  );\n};\n\nexport default RightColumn;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"../components/Header\";\nimport HeroImage from \"../components/HeroImage\";\nimport Footer from \"../components/Footer\";\nimport Main from \"../components/Main\";\nimport RightColumn from \"../components/RightColumn\";\nimport \"./layout.css\";\nimport styled from \"styled-components\";\nimport { sizes } from \"../shared/breakpoints\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  margin: auto;\n  max-width: 1030px;\n\n  @media(min-width: ${sizes.sm}) {\n    grid-template-columns: 70% 1fr;\n  }\n`;\n\nconst Layout = ({ children }) => (\n  <>\n    <Header />\n    <HeroImage />\n    <Grid>\n      <Main>\n        {children}\n      </Main>\n      <RightColumn />\n    </Grid>\n    <Footer />\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React, { useEffect, useState } from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport Image from \"gatsby-image\";\nimport styled from \"styled-components\"\nimport { colors } from \"../shared/constants\";\nimport Layout from \"../layout/Layout\"\nimport MainTitle from \"../components/MainTitle\";\nimport PostDate from \"../components/PostDate\";\n\nconst PostHeader = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n`\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  transition: 0.3s;\n\n    &:hover {\n      opacity: 0.5;\n    }\n`;\n\nconst ReadMoreLink = styled(Link)`\n  display: block;\n  font-size: 13px;\n  text-transform: uppercase;\n  text-align: center;\n  text-decoration: underline;\n  color: inherit;\n  transition: 0.3s;\n\n    &:hover {\n      opacity: 0.5;\n    }\n`;\n\nconst Article = styled.article`\n  font-size: 17px;\n  color: ${colors.textPrimary};\n  margin-bottom: 60px;\n  text-align: justify;\n  line-height: 1.75;\n\n  & .gatsby-resp-image-wrapper {\n    margin: 30px 0;\n  }\n`\n\nconst IMG = styled(Image)`\n  margin: 30px 0;\n  max-width: 100%;\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst PaginationLink = styled(Link)`\n  padding: 0 8px;\n`;\n\nconst PaginationItem = styled.span`\n  color: ${colors.textLight};\n  padding: 0 8px;\n`;\n\nexport const posts = graphql`\n  query posts($limit: Int, $skip: Int) {\n    allContentfulBlogPosts(limit: $limit, sort: {order: DESC, fields: date}, skip: $skip) {\n      edges {\n        node {\n          date(formatString: \"MMM DD, YYYY\", locale: \"en\")\n          featuredImage { \n            fluid(maxWidth: 980) {\n              ...GatsbyContentfulFluid\n            }\n          }\n          slug\n          title\n          excerpt {\n            excerpt\n          }\n          content {\n            raw\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst BlogPage = (props) => {\n  const [pageArray, setPageArray] = useState([]);\n  const { currentPage, numPages } = props.pageContext;\n\n  useEffect(() => {\n    const pages = [];\n\n    for (let i=1; i<=numPages; i++) {\n      pages.push(i);\n    }\n\n    setPageArray(pages)\n  }, []);\n\n  return (\n    <Layout>\n      {props.data.allContentfulBlogPosts.edges.length && props.data.allContentfulBlogPosts.edges.map((post) => (\n        <ol key={post.node.slug}>\n          <PostHeader>\n            <MainTitle><StyledLink to={`/blog/${post.node.slug}`}>{post.node.title}</StyledLink></MainTitle>\n            <PostDate date={post.node.date} />\n          </PostHeader>\n          <Article>\n          <IMG \n            fluid={props.data.allContentfulBlogPosts.edges[0].node.featuredImage.fluid} \n            key={props.data.allContentfulBlogPosts.edges[0].node.featuredImage.fluid.src}\n            alt={props.data.allContentfulBlogPosts.edges[0].node.featuredImage.title}\n          />\n            {post.node.excerpt?.excerpt\n              ? post.node.excerpt.excerpt\n              : <p>{post.node.content.raw.content.find((node) => node.nodeType === \"paragraph\").content[0].value}</p>\n            }\n            <ReadMoreLink to={`/blog/${post.node.slug}`}>Read more...</ReadMoreLink>\n          </Article>\n        </ol>\n      ))}\n      {numPages > 1 &&\n        <Pagination>\n          {pageArray.map(element => (\n            element !== currentPage ? (\n            <PaginationLink to={element === 1 ? \"/\" : `/strona/${element}`} key={element}>{element}</PaginationLink>\n            ) : (\n            <PaginationItem key={element}>{element}</PaginationItem>\n            )\n          ))}\n        </Pagination>\n      }\n    </Layout>\n  );\n}\n\nexport default BlogPage\n"],"names":["Title","styled","colors","children","Date","date","BorderedWrapper","TitleText","title","PostItem","PostItemTitle","PostItemDate","Thumbnail","Image","Meta","post","useStaticQuery","alt","node","Link","to","slug","Aside","IMG","Text","WidgetArea","query","srcSet","allContentfulAsset","nodes","fluid","allContentfulBlogPosts","edges","map","key","Grid","sizes","Header","HeroImage","Main","Footer","PostHeader","StyledLink","ReadMoreLink","Article","Pagination","PaginationLink","PaginationItem","props","useState","pageArray","setPageArray","pageContext","currentPage","numPages","useEffect","pages","i","push","data","length","featuredImage","src","excerpt","content","raw","find","nodeType","value","element"],"sourceRoot":""}