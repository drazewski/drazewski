{"version":3,"file":"component---src-pages-index-js-038fc2494b71eda0a87b.js","mappings":"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","sources":["webpack://ldrazewski-blog/./src/components/HeroImageTitle.js","webpack://ldrazewski-blog/./src/components/MainTitle.js","webpack://ldrazewski-blog/./src/components/PostDate.js","webpack://ldrazewski-blog/./src/components/HeroImage.js","webpack://ldrazewski-blog/./src/components/SidebarTitle.js","webpack://ldrazewski-blog/./src/components/FeaturedPost.js","webpack://ldrazewski-blog/./src/components/RightColumn.js","webpack://ldrazewski-blog/./src/layout/Layout.js","webpack://ldrazewski-blog/./src/pages/index.js","webpack://ldrazewski-blog/./src/shared/parallax.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { sizes } from \"../shared/breakpoints\";\n\nconst HeroImageTitleWrapper = styled.div`\n  max-width: 1030px;\n  width: 100%;\n  position: absolute;\n  bottom: 5%;\n  left: 50%;\n  right: 50%;\n  transform: translateX(-50%);\n`;\n\nconst Title = styled.div`\n  position: absolute;\n  bottom: 0px;\n  color: white;\n  left: 15px;\n`;\n\nconst Name = styled.h1`\n  font-size: 22px;\n  margin-bottom: 1px;\n  padding-bottom: 12px;\n  font-weight: 300;\n\n  @media(min-width: ${sizes.sm}) {\n    font-size: 30px;\n  }\n`;\n\nconst Border = styled.div`\n  height: 2px;\n  background: linear-gradient(77deg,#c805f1,#84b3f9ed, #cbe0ff00);\n`;\n\n\nconst Subname = styled.h5`\n  font-size: 12px;\n  font-weight: 500;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  margin: 10px 0;\n\n  @media(min-width: ${sizes.sm}) {\n    margin: 15px 0;\n  }\n`;\n\nconst HeroImageTitle = () => {\n  return (\n    <HeroImageTitleWrapper>\n      <Title>\n        <Name>Lukasz Drazewski</Name>\n        <Border />\n        <Subname>personal blog</Subname>\n      </Title> \n    </HeroImageTitleWrapper>\n  );\n};\n\nexport default HeroImageTitle;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../shared/constants\";\n\nconst Title = styled.h2`\n  font-size: ${props => props.isHome ? \"30px\" : \"40px\"};\n  font-weight: 300;\n  color: ${colors.headingsPrimary};\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  text-align: center;\n  margin: ${props => props.isHome ? \"4px 0 15px\" : \"15px 0\"};\n`;\n\nconst MainTitle = ({ children, isHome }) => (\n  <Title isHome={isHome}>\n    {children}\n  </Title>\n);\n\nexport default MainTitle;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../shared/constants\";\n\nconst Date = styled.span`\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  color: ${colors.textLight};\n  font: 12px Lora;\n`;\n\nconst PostDate = ({ date }) => <Date>{date}</Date>;\n\nexport default PostDate;","import React, { useEffect, useState } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\nimport HeroImageTitle from \"./HeroImageTitle\";\n\nconst ExportedImage = styled(GatsbyImage)`\n  margin: auto;\n  position: unset !important;\n`;\n\nconst HeroImageWrapper = styled.section`\n  margin: 0 0 20px 0;\n  overflow: hidden;\n  padding: 0;\n  position: relative;\n  min-height: 50vh;\n`;\n\nconst HeroImage = () => {\n  const [heroHeight, setHeroHeight] = useState(\"calc(100vh)\");\n\n  const data = useStaticQuery(graphql`\n    query {\n      placeholderImage: file(relativePath: { eq: \"sea.png\" }) {\n        childImageSharp {\n          gatsbyImageData(\n            width: 1600\n            layout: FULL_WIDTH\n            placeholder: BLURRED\n            formats: [AUTO, WEBP, AVIF]\n          )\n        }\n      }\n    }\n  `);\n\n  useEffect(() => {\n    const isNextTimeVisited = localStorage.getItem(\"nextTimeVisited\");\n\n    if (isNextTimeVisited) {\n      setHeroHeight(\"69vh\");\n    } else {\n     localStorage.setItem(\"nextTimeVisited\", 1);\n    }\n  },[]);\n\n  const image = getImage(data.placeholderImage);\n\n  return (\n    <HeroImageWrapper style={{maxHeight: heroHeight}}>\n      <ExportedImage\n        image={image}\n        alt=\"Łukasz Drążewski Personal Blog\"\n      />\n      <HeroImageTitle />\n    </HeroImageWrapper>\n  );\n};\n\nexport default HeroImage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst BorderedWrapper = styled.div`\n  padding-top: 30px;\n  border-top: 1px solid #ddd;\n`;\n\nconst Title = styled.h2`\n  font-size: 16px;\n  font-weight: 500;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n  text-align: center;\n  margin-top: -40px;\n  margin-bottom: 0px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\nconst TitleText = styled.span`\n  display: inline-block;\n  padding: 0 20px;\n  background-color: #fff;\n`;\n\nconst SidebarTitle = ({ title }) => (\n  <BorderedWrapper>\n    <Title>\n      <TitleText>{title}</TitleText>\n    </Title>\n  </BorderedWrapper>\n);\n\nexport default SidebarTitle;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { colors } from \"../shared/constants\";\nimport { sizes } from \"../shared/breakpoints\";\n\nconst PostItem = styled.div`\n  display: flex;\n  margin-bottom: 15px;\n`;\n\nconst PostItemTitle = styled.h4`\n  color: ${colors.headingsPrimary};\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 1.5;\n  margin: 0;\n  margin-bottom: 6px;\n\n  @media(min-width: ${sizes.sm}) {\n    font-size: 14px;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n  }\n\n  @media(min-width: ${sizes.md}) {\n    -webkit-line-clamp: 3;\n  }\n`;\n\nconst PostItemSubtitle = styled.span`\n  color: ${colors.textLight};\n  text-transform: uppercase;\n  font-size: 13px;\n  font-family: 'Open sans';\n  font-style: italic;\n\n  @media(min-width: ${sizes.sm}) {\n    font-size: 11px;\n  }\n`;\n\nconst Thumbnail = styled.img`\n  flex: 2;\n  margin: 10px 0px;\n  width: 60px;\n  min-height: 60px;\n  max-width: 140px;\n`;\n\nconst Meta = styled.div`\n  flex: 3;\n  margin: 5px 0 10px 10px;\n`;\n\nconst FeaturedPost = ({ title, imageUrl, link, subtitle }) => {\n  return (\n    <PostItem>\n      <Thumbnail\n        alt={title}\n        src={imageUrl}\n      />\n      <Meta>\n        <PostItemTitle>\n          <Link to={link}>{title}</Link>\n        </PostItemTitle>\n        <PostItemSubtitle>{subtitle}</PostItemSubtitle>\n      </Meta>\n    </PostItem>\n  );\n};\n\nFeaturedPost.propTypes = {\n  title: PropTypes.string.isRequired,\n  imageUrl: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n};\n\nexport default FeaturedPost;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport SidebarTitle from \"./SidebarTitle\";\nimport FeaturedPost from \"./FeaturedPost\";\n\nconst Aside = styled.aside`\n  min-height: calc(100vh - 210px);\n  max-width: 1030px;\n  margin: 0 auto;\n  padding: 30px 0;\n  width: calc(100% - 60px);\n`;\n\nconst IMG = styled.img`\n  max-width: 70%;\n  margin: auto;\n  display: flex;\n  padding-bottom: 20px;\n`;\n\nconst Text = styled.p`\n  font-size: 14px;\n  margin: 0 0 20px 0;\n`;\n\nconst WidgetArea = styled.div`\n  padding-bottom: 30px;\n`;\n\nconst RightColumn = () => {\n  const query = useStaticQuery(graphql`\n    {\n      allContentfulBlogPosts(filter: {featured: {eq: true}}) {\n        edges {\n          node {\n            date(formatString: \"MMM DD, YYYY\", locale: \"en\")\n            slug\n            title\n            content {\n              raw\n            }\n            featuredImage {\n              fixed(width: 300) {\n                src\n              }\n            }\n          }\n        }\n      }\n\n      allContentfulExternalLinks(sort: {order: DESC, fields: date}, limit: 5) {\n        edges {\n          node {\n            author\n            title\n            url\n            featuredImage {\n              fixed(width: 300) {\n                src\n              }\n            }\n          }\n        }\n      }\n\n      contentfulElements(title: {eq: \"about-me\"}) {\n        content {\n          content\n        }\n      }\n\n      allContentfulAsset(filter: {title: {eq: \"personal-photo\"}}) {\n        nodes {\n          fluid {\n            srcSet\n          }\n        }\n      }\n    }\n  `);\n\n  return (\n    <Aside>\n      <WidgetArea>\n        <SidebarTitle title=\"Here I Am\" />\n        <IMG srcSet={query.allContentfulAsset.nodes[0].fluid.srcSet} />\n        <Text>\n          {query.contentfulElements.content.content}\n        </Text>\n      </WidgetArea>\n      <WidgetArea>\n        <SidebarTitle title=\"Random posts\" />\n        {query.allContentfulBlogPosts.edges.map((post) => (\n          <FeaturedPost\n            key={post.node.slug}\n            title={post.node.title}\n            imageUrl={post.node.featuredImage.fixed.src}\n            link={`/blog/${post.node.slug}`}\n            subtitle={post.node.date}\n          />\n        ))}\n      </WidgetArea>\n      <WidgetArea>\n        <SidebarTitle title=\"Recommended\" />\n        <Text>\n          Here you will find interesting articles on various topics that I have read recently.\n        </Text>\n        {query.allContentfulExternalLinks.edges.map((post) => (\n          <FeaturedPost\n            key={post.node.title}\n            title={post.node.title}\n            imageUrl={post.node.featuredImage.fixed.src}\n            link={post.node.url}\n            subtitle={post.node.author}\n          />\n        ))}\n      </WidgetArea>\n    </Aside>\n  );\n};\n\nexport default RightColumn;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"../components/Header\";\nimport HeroImage from \"../components/HeroImage\";\nimport Footer from \"../components/Footer\";\nimport Main from \"../components/Main\";\nimport RightColumn from \"../components/RightColumn\";\nimport \"./layout.css\";\nimport styled from \"styled-components\";\nimport { sizes } from \"../shared/breakpoints\";\nimport SEO from \"../components/Seo\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  margin: auto;\n  max-width: 1030px;\n\n  @media(min-width: ${sizes.sm}) {\n    grid-template-columns: 70% 1fr;\n  }\n`;\n\nconst Layout = ({ children }) => (\n  <>\n    <SEO />\n    <Header />\n    <div className=\"parallax\">\n      <HeroImage />\n    </div>\n    <Grid>\n      <Main>\n        {children}\n      </Main>\n      <RightColumn />\n    </Grid>\n    <Footer />\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React, { useEffect, useState } from \"react\"\nimport { Link } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport Image from \"gatsby-image\";\nimport styled from \"styled-components\"\nimport { colors } from \"../shared/constants\";\nimport Layout from \"../layout/Layout\"\nimport MainTitle from \"../components/MainTitle\";\nimport PostDate from \"../components/PostDate\";\nimport Parallax from \"../shared/parallax\";\n\nconst PostHeader = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n`\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n  transition: 0.3s;\n\n    &:hover {\n      opacity: 0.5;\n    }\n`;\n\nconst ReadMoreLink = styled(Link)`\n  display: block;\n  font-size: 14px;\n  text-transform: uppercase;\n  text-align: center;\n  text-decoration: underline;\n  color: inherit;\n  transition: 0.3s;\n  margin-top: 10px;\n\n    &:hover {\n      opacity: 0.5;\n    }\n`;\n\nconst Article = styled.article`\n  font-size: 17px;\n  color: ${colors.textPrimary};\n  margin-bottom: 60px;\n  text-align: justify;\n  line-height: 1.75;\n\n  & .gatsby-resp-image-wrapper {\n    margin: 30px 0;\n  }\n`\n\nconst IMG = styled(Image)`\n  margin: 30px 0;\n  max-width: 100%;\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst PaginationLink = styled(Link)`\n  padding: 0 8px;\n`;\n\nconst PaginationItem = styled.span`\n  color: ${colors.textLight};\n  padding: 0 8px;\n`;\n\nexport const posts = graphql`\n  query posts($limit: Int, $skip: Int) {\n    allContentfulBlogPosts(limit: $limit, sort: {order: DESC, fields: date}, skip: $skip) {\n      edges {\n        node {\n          date(formatString: \"MMM DD, YYYY\", locale: \"en\")\n          featuredImage { \n            fluid(maxWidth: 980) {\n              ...GatsbyContentfulFluid\n            }\n          }\n          slug\n          title\n          excerpt {\n            excerpt\n          }\n          content {\n            raw\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst BlogPage = (props) => {\n  const [pageArray, setPageArray] = useState([]);\n  const { currentPage, numPages } = props.pageContext;\n\n  useEffect(() => {\n    const pages = [];\n\n    for (let i=1; i<=numPages; i++) {\n      pages.push(i);\n    }\n\n    setPageArray(pages);\n\n    const parallax = new Parallax();\n\n    parallax.setVars();\n  }, []);\n\n  return (\n    <Layout>\n      {props.data.allContentfulBlogPosts.edges.length && props.data.allContentfulBlogPosts.edges.map((post) => (\n        <ol key={post.node.slug}>\n          <PostHeader>\n            <MainTitle isHome><StyledLink to={`/blog/${post.node.slug}`}>{post.node.title}</StyledLink></MainTitle>\n            <PostDate date={post.node.date} />\n          </PostHeader>\n          <Article>\n            <Link to={`/blog/${post.node.slug}`}>\n              <IMG \n                fluid={props.data.allContentfulBlogPosts.edges[0].node.featuredImage.fluid} \n                key={props.data.allContentfulBlogPosts.edges[0].node.featuredImage.fluid.src}\n                alt={props.data.allContentfulBlogPosts.edges[0].node.featuredImage.title}\n              />\n            </Link>\n            {post.node.excerpt?.excerpt\n              ? post.node.excerpt.excerpt\n              : <p>{post.node.content.raw.content.find((node) => node.nodeType === \"paragraph\").content[0].value}</p>\n            }\n            <ReadMoreLink to={`/blog/${post.node.slug}`}>Read more...</ReadMoreLink>\n          </Article>\n        </ol>\n      ))}\n      {numPages > 1 &&\n        <Pagination>\n          {pageArray.map(element => (\n            element !== currentPage ? (\n            <PaginationLink to={element === 1 ? \"/\" : `/strona/${element}`} key={element}>{element}</PaginationLink>\n            ) : (\n            <PaginationItem key={element}>{element}</PaginationItem>\n            )\n          ))}\n        </Pagination>\n      }\n    </Layout>\n  );\n}\n\nexport default BlogPage\n","class Parallax {\n    constructor() {\n        if (!this.setVars()) return;\n        this.setListeners();\n    }\n\n    setVars() {\n        this.elements = document.body.getElementsByClassName(\"parallax\");\n        if (!this.elements.length) return false;\n\n        return true;\n    }\n\n    setListeners() {\n        this.moveElements = this.moveElements.bind(this);\n        window.addEventListener(\"scroll\", this.moveElements, { passive: true });\n    }\n\n    moveElements() {\n        const el = [...this.elements][0];\n        const bottom = el && el.getBoundingClientRect().bottom;\n\n        if (bottom > 0) {\n            const top = el.getBoundingClientRect().top;\n            const proportion = el.offsetHeight / -top;\n    \n            if (top < 0 && proportion > 1) {\n                const elLength = el.getElementsByTagName(\"img\").length;\n                if (elLength) {\n                    el.getElementsByTagName(\"img\")[elLength - 1].style = \n                        `object-position: center calc(50% - ${1 / proportion} * 36%); opacity: 1`;\n                }\n            }\n        }\n    }\n}\n\nexport default Parallax;"],"names":["HeroImageTitleWrapper","styled","Title","Name","sizes","Border","Subname","props","isHome","colors","children","Date","date","ExportedImage","GatsbyImage","HeroImageWrapper","useState","heroHeight","setHeroHeight","data","useStaticQuery","useEffect","localStorage","getItem","setItem","image","getImage","placeholderImage","style","maxHeight","alt","HeroImageTitle","BorderedWrapper","TitleText","title","PostItem","PostItemTitle","PostItemSubtitle","Thumbnail","Meta","imageUrl","link","subtitle","src","Link","to","Aside","IMG","Text","WidgetArea","query","srcSet","allContentfulAsset","nodes","fluid","contentfulElements","content","allContentfulBlogPosts","edges","map","post","key","node","slug","featuredImage","fixed","allContentfulExternalLinks","url","author","Grid","Header","className","Main","Footer","PostHeader","StyledLink","ReadMoreLink","Article","Image","Pagination","PaginationLink","PaginationItem","pageArray","setPageArray","pageContext","currentPage","numPages","pages","i","push","Parallax","setVars","length","excerpt","raw","find","nodeType","value","element","this","setListeners","elements","document","body","getElementsByClassName","moveElements","bind","window","addEventListener","passive","el","getBoundingClientRect","bottom","top","proportion","offsetHeight","elLength","getElementsByTagName"],"sourceRoot":""}